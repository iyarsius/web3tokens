"use strict";(self.webpackChunkweb3tokens=self.webpackChunkweb3tokens||[]).push([[8651],{4602:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>h});var s=t(4848),r=t(8453);const o={},a="ERC20FlashMint",i={id:"auto/structures/ERC20/extensions/ERC20FlashMint",title:"ERC20FlashMint",description:"Implementation of the ERC3156 Flash loans extension, as defined in https://eips.ethereum.org/EIPS/eip-3156. Adds the flashLoan method, which provides flash loan support at the token level. By default there is no fee, but this can be changed by overriding flashFee.",source:"@site/docs/auto/structures/ERC20/extensions/ERC20FlashMint.md",sourceDirName:"auto/structures/ERC20/extensions",slug:"/auto/structures/ERC20/extensions/ERC20FlashMint",permalink:"/web3tokens/docs/auto/structures/ERC20/extensions/ERC20FlashMint",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/auto/structures/ERC20/extensions/ERC20FlashMint.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ERC20Burnable",permalink:"/web3tokens/docs/auto/structures/ERC20/extensions/ERC20Burnable"},next:{title:"ERC20Mintable",permalink:"/web3tokens/docs/auto/structures/ERC20/extensions/ERC20Mintable"}},l={},h=[{value:"Constructor",id:"constructor",level:2},{value:"Properties",id:"properties",level:2},{value:"address",id:"address",level:3},{value:"Methods",id:"methods",level:2},{value:"flashFee(value)",id:"flashFee",level:3},{value:"flashLoan(args)",id:"flashLoan",level:3},{value:"maxFlashLoan()",id:"maxFlashLoan",level:3}];function c(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"erc20flashmint",children:"ERC20FlashMint"}),"\n",(0,s.jsxs)(n.p,{children:["Implementation of the ERC3156 Flash loans extension, as defined in ",(0,s.jsx)(n.a,{href:"https://eips.ethereum.org/EIPS/eip-3156",children:"https://eips.ethereum.org/EIPS/eip-3156"}),". Adds the ",(0,s.jsx)(n.code,{children:"flashLoan"})," method, which provides flash loan support at the token level. By default there is no fee, but this can be changed by overriding ",(0,s.jsx)(n.code,{children:"flashFee"}),"."]}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsxs)(n.p,{children:["When this extension is used along with the ",(0,s.jsx)(n.code,{children:"ERC20Capped"})," or ",(0,s.jsx)(n.code,{children:"ERC20Votes"})," extensions, ",(0,s.jsx)(n.code,{children:"maxFlashLoan"})," will not correctly reflect the maximum that can be flash minted."]})}),"\n",(0,s.jsx)(n.h2,{id:"constructor",children:"Constructor"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"new ERC20FlashMint(config: IContractConfig);\n"})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Param"}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"config"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.a,{href:"IContractConfig:interface",children:"IContractConfig"})}),(0,s.jsx)(n.td,{})]})})]}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)("div",{class:"api-section",children:[(0,s.jsxs)("div",{class:"api-column",children:[(0,s.jsx)("h2",{children:"Properties"}),(0,s.jsx)("ul",{children:(0,s.jsx)("li",{children:(0,s.jsx)(n.a,{href:"#address",children:"address"})})})]}),(0,s.jsxs)("div",{class:"api-column",children:[(0,s.jsx)("h2",{children:"Methods"}),(0,s.jsxs)("ul",{children:[(0,s.jsx)("li",{children:(0,s.jsx)(n.a,{href:"#flashFee",children:"flashFee"})}),(0,s.jsx)("li",{children:(0,s.jsx)(n.a,{href:"#flashLoan",children:"flashLoan"})}),(0,s.jsx)("li",{children:(0,s.jsx)(n.a,{href:"#maxFlashLoan",children:"maxFlashLoan"})})]})]})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(n.h3,{id:"address",children:"address"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Returns"})}),"\n",(0,s.jsx)(n.p,{children:"Type: Address"}),"\n"]}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(n.h3,{id:"flashFee",children:"flashFee(value)"}),"\n",(0,s.jsx)(n.p,{children:"Get the fee applied when doing flash loans. This function returns the fee applied when doing flash loans."}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"value"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"bigint"}),(0,s.jsx)(n.td,{children:"The amount of tokens to be loaned in lower units. (see ERC20.decimals())"})]})})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// amount is in lower units (see ERC20.decimals)\nconst amountToLoan = erc20.toLowerUnits(10.45);\nconst flashFee = await erc20FlashMint.flashFee(amountToLoan);\n\n// to perform the loan, you need to pay the loan amount and the flash fee.\nconst amountToPay = amountToLoan + flashFee;\n\n// do the loan\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns"})," a ",(0,s.jsx)(n.code,{children:"ContractOperation"})," instance."]}),"\n",(0,s.jsx)(n.p,{children:"Type: Promise<bigint>"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"flashLoan",children:"flashLoan(args)"}),"\n",(0,s.jsxs)(n.p,{children:["Performs a flash loan. New tokens are minted and sent to the ",(0,s.jsx)(n.code,{children:"receiver"}),", who is required to implement the ",(0,s.jsx)(n.code,{children:"IERC3156FlashBorrower"})," interface. By the end of the flash loan, the receiver is expected to own value + fee tokens and have them approved back to the token contract itself so they can be burned."]}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsxs)(n.p,{children:["This function relies on the \u201catomic\u201d nature of transactions. To make a flashLoan you must repay it in the same transaction. This function is therefore only applicable to a smart contract compatible with ",(0,s.jsx)(n.a,{href:"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC3156FlashBorrower.sol",children:"IERC3156FlashBorrower"}),' interface cause the "flashLoan" function will call a "onFlashLoan" function on the smart contract used as borrower witch should implement the repay logic.']})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"args"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.a,{href:"/docs/auto/types/ERC20/extensions/ERC20FlashMint/IERC20FlashMintFlashLoanParams",children:"IERC20FlashMintFlashLoanParams"})}),(0,s.jsxs)(n.td,{children:["The parameters to be passed into ",(0,s.jsx)(n.code,{children:"flashLoan"})," function of the ERC20FlashMint contract."]})]})})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'// assume that your borrower is a contract that implements the IERC3156FlashBorrower interface.\nconst borrower = "0x000" // the address of your contract;\n\n// flashloan function will send new tokens to the receiver and call the "onFlashLoan" function on the receiver.\nconst flashLoan = await erc20FlashMint.flashLoan({\n  receiver: borrower,\n  value: amountToLoan, // in lower units (see ERC20.decimals)\n  data: "data to be passed to \'onFlashLoan\' function of the contract"\n})\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns"})," The amount of tokens to pay as a fee."]}),"\n",(0,s.jsxs)(n.p,{children:["Type: ",(0,s.jsx)(n.a,{href:"/docs/auto/structures/ContractOperation",children:"ContractOperation"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"maxFlashLoan",children:"maxFlashLoan()"}),"\n",(0,s.jsx)(n.p,{children:"Get the maximum amount of tokens available for loan."}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"This function does not consider any form of supply cap."})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns"})," The amount of tokens that can be loaned."]}),"\n",(0,s.jsx)(n.p,{children:"Type: Promise<bigint>"}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var s=t(6540);const r={},o=s.createContext(r);function a(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);